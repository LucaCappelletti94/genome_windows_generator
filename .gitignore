# pyenv
docs/_build/
*.manifest
# mkdocs documentation
# Scrapy stuff:
.coverage*
# Jupyter Notebook
dist/
*.py,cover
venv.bak/
*.pot
*.spec
*$py.class
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
.pyre/
.venv
\.DS_Store
.python-version
downloads/
# PyBuilder
# Translations
# pipenv
.env
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
*.sage.py
# Byte-compiled / optimized / DLL files
**/__pycache__/*
.mypy_cache/
celerybeat.pid
#   install all needed dependencies.
# Django stuff:
\.vscode/
coverage.xml
# PEP 582; used by e.g. github.com/David-OConnor/pyflow
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
*.egg-info/
.hypothesis/
target/
*/__pycache__/*
db.sqlite3
htmlcov/
*.cover
# IPython
# Installer logs
var/
.pytest_cache/
lib64/
venv/
local_settings.py
build/
celerybeat-schedule
# PyInstaller
eggs/
#  Usually these files are written by a python script from a template
*.mo
# Unit test / coverage reports
*.log
/site
.eggs/
env.bak/
# *.so
.coverage.*
# Pyre type checker
profile_default/
wheels/
pip-delete-this-directory.txt
*.py[cod]
.cache
.tox/
MANIFEST
# Environments
.installed.cfg
pip-log.txt
# Spyder project settings
nosetests.xml
develop-eggs/
# Flask stuff:
.ipynb_checkpoints
# SageMath parsed files
instance/
.coverage
ipython_config.py
.single_run
.nox/
.webassets-cache
# Distribution / packaging
*.egg
ENV/
lib/
db.sqlite3-journal
# mypy
# Celery stuff
pip-wheel-metadata/
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
parts/
#Pipfile.lock
.dmypy.json
.notipy.json
# Rope project settings
# C extensions
share/python-wheels/
sdist/
.ropeproject
env/
__pycache__
dmypy.json
.spyderproject
.Python
__pypackages__/
.spyproject
__pycache__/
# Sphinx documentation
.scrapy