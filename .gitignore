*.py,cover
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.py[cod]
.spyproject
db.sqlite3
.notipy.json
#Pipfile.lock
# Byte-compiled / optimized / DLL files
# Celery stuff
.nox/
*.cover
*.spec
# IPython
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
celerybeat-schedule
docs/_build/
.mypy_cache/
*/__pycache__/*
nosetests.xml
wheels/
*.log
lib64/
celerybeat.pid
downloads/
.ipynb_checkpoints
# Sphinx documentation
# Spyder project settings
.installed.cfg
ipython_config.py
\.vscode/
pip-wheel-metadata/
.pyre/
#   install all needed dependencies.
eggs/
.coverage
*.mo
.tox/
*.sage.py
.coverage*
.dmypy.json
*.pot
develop-eggs/
# pipenv
# Jupyter Notebook
# mkdocs documentation
*.egg-info/
ENV/
# Translations
.python-version
pip-log.txt
# mypy
.env
# Django stuff:
parts/
.hypothesis/
.coverage.*
lib/
var/
# Unit test / coverage reports
db.sqlite3-journal
*$py.class
\.DS_Store
__pycache__
/site
.ropeproject
.venv
# Environments
# PyBuilder
htmlcov/
#  Usually these files are written by a python script from a template
__pycache__/
# PyInstaller
target/
# C extensions
# Distribution / packaging
coverage.xml
MANIFEST
.scrapy
.spyderproject
build/
.pytest_cache/
# Scrapy stuff:
venv.bak/
.eggs/
# PEP 582; used by e.g. github.com/David-OConnor/pyflow
# Flask stuff:
*.manifest
local_settings.py
.cache
dmypy.json
env.bak/
sdist/
# Rope project settings
# Pyre type checker
dist/
venv/
.webassets-cache
profile_default/
*.egg
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
instance/
.single_run
pip-delete-this-directory.txt
share/python-wheels/
# Installer logs
# *.so
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
**/__pycache__/*
.Python
# SageMath parsed files
# pyenv
__pypackages__/
env/